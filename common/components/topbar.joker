<template>
    <header>
        <div class="topbar">
            <h1 @click="handleGoHome">
                <img src="https://static.jokers.pub/joker.png" />
                Joker
                <div>
                    <span>@(lang === "zh-CN" ? "帮助中心" : "Help Center")</span>
                </div>
            </h1>
            <div id="docsearch"></div>
            <ul class="menu">
                @for(let menu of menus) {
                    <li class="@getClassName(menu.path) @(menu.class||'')">
                        <a href="@menu.path" @click="go(menu.path)" target="@menu.target">@menu.title</a>
                    </li>
                }
            </ul>
            <a class="lang" href="@(langSwtichPath)">@(lang === "zh-CN" ? "English" : "中文")</a>
            <a href="https://x.com/jokers_pub" target="_blank" class="out-link">
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    aria-hidden="true"
                    focusable="false"
                    viewBox="0 0 24 24"
                    class="vt-social-link-icon">
                    <path
                        d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"></path>
                </svg>
            </a>
            <div class="mini-nav-btn @(model.navIsOpen?'is-open':'')" @click="openNav">
                <span></span>
                <span></span>
                <span></span>
            </div>
            <ul class="nav-fix @(model.navIsOpen?'is-open':'')">
                @for(let menu of menus) {
                    <li>
                        <a href="@menu.path" @click="go(menu.path)" target="@menu.target">@menu.title</a>
                    </li>
                }
            </ul>
        </div>
    </header>
</template>
<script>
import { Component, VNode } from "@joker.front/core";
import { router } from "@joker.front/router";
import { MenuZhCN, MenuEn } from "../datas/menu";
import docsearch from "@docsearch/js";
import { getNavData } from "../datas/nav";
import "@docsearch/css";
import { getLang } from "../utils";

export default class extends Component {
    model = {
        navIsOpen: false,
        currentPath: ""
    };
    menus = getNavData();
    lang = getLang();
    get langSwtichPath() {
        let path = this.model.currentPath;

        if (path.startsWith("/cn")) {
            path = path.substring(3);
        }

        return (
            (this.lang === "zh-CN" ? "https://help.viscode.jokers.pub" : "https://help.viscode.jokers.pub/cn") + path
        );
    }
    getClassName(path: string) {
        if (path.startsWith("http")) return "";
        let currentRoute = router.route.value;
        let routeFullPath = currentRoute.fullPath;
        if (routeFullPath.startsWith("/cn")) routeFullPath = routeFullPath.substring(3);

        if (path.startsWith("/cn")) path = path.substring(3);

        if (routeFullPath.split("/").filter(Boolean)[0] === "" && (path === "/index" || path === "/cn/index"))
            return "active";

        return path.split("/").filter(Boolean)[0] === routeFullPath.split("/").filter(Boolean)[0] ? "active" : "";
    }
    go(e: VNode.Event, path: string) {
        this.model.navIsOpen = false;
        if (path.startsWith("http")) return;
        router.push(path);
        e.preventDefault();
    }

    created() {
        this.$watch(
            () => router.route.value,
            () => {
                this.setTitle();
                this.model.currentPath = router.route.value.fullPath;
            }
        );

        this.setTitle();
        this.model.currentPath = router.route.value.fullPath;
    }

    mounted() {
        docsearch({
            container: "#docsearch",
            appId: "U6KJ6739FP",
            indexName: this.lang === "zh-CN" ? "help-lowcode" : "help-lowcode-en",
            apiKey: "aa7e584e01dfa193ec388bd99e005283",
            insights: true
        });
    }

    setTitle() {
        let menus = this.lang === "zh-CN" ? MenuZhCN : MenuEn;
        let defaultTitle =
            this.lang === "zh-CN"
                ? "Joker 可视化开发平台帮助文档"
                : "Joker Visual Development Platform Help Documentation";
        for (let group of menus.allMenus) {
            for (let item of group.children || []) {
                if (item.path === (this.lang === "zh-CN" ? "/cn" : "") + router.route.value.path) {
                    document.title = `${group.title} - ${item.title} ${defaultTitle}`;
                    return;
                }
            }
        }

        document.title = defaultTitle;
    }
    handleGoHome() {
        router.push("/");
    }
    openNav() {
        this.model.navIsOpen = !this.model.navIsOpen;

        if (this.model.navIsOpen) {
            window.document.body.style.overflow = "hidden";
        } else {
            window.document.body.style.overflow = "";
        }
    }
}
</script>

<style lang="scss" scoped>
header {
    border-bottom: 1px solid #dcdfe6;

    .topbar {
        height: 55px;
        line-height: 55px;
        font-size: 24px;
        box-sizing: border-box;
        padding: 0 25px;
        display: flex;
        align-items: center;

        h1 {
            display: flex;
            align-items: center;
            margin: 0;
            font-size: 26px;
            font-weight: normal;
            cursor: pointer;
            font-family: "Lucida Console", "Courier New", monospace;
            img {
                width: 30px;
                height: 30px;
                margin-right: 8px;
            }
            span {
                font-size: 16px;
                margin-left: 10px;
            }
        }

        > ul {
            flex: 1;
            display: flex;
            justify-content: end;

            li {
                list-style: none;
                font-size: 13px;
                font-weight: 500;

                box-sizing: content-box;
                cursor: pointer;
                a {
                    padding: 0 12px;
                    display: inline-block;
                    height: 100%;
                    color: #1f2f3d;
                    text-decoration: none;
                    &:hover {
                        color: var(--jk-color-primary);
                    }
                }

                &.active {
                    border-bottom: solid 2px var(--jk-color-primary);
                }

                &.line {
                    margin-left: 10px;
                    padding-left: 10px;
                    border-left: solid 1px #efefef;
                }
            }
        }

        .out-link {
            width: 20px;
            height: 20px;
            display: inline-block;
            line-height: 1;
            margin-left: 15px;
            opacity: 0.5;
            &:hover {
                opacity: 1;
            }
        }
        a.lang {
            font-size: 14px;
            margin-left: 10px;
            text-decoration: none;
            color: #1f2f3d;

            &:hover {
                color: var(--jk-color-primary);
            }
        }

        .mini-nav-btn {
            width: 22px;
            display: none;
            margin-left: 10px;
            cursor: pointer;
            span {
                height: 2px;
                display: block;
                background: var(--jk-color-text-regular);
                transition: 0.3s ease-in-out;
                &:first-child {
                    transform: translateY(-4px);
                }
                &:last-child {
                    transform: translateY(4px);
                }
            }

            &.is-open {
                span {
                    &:nth-child(2) {
                        display: none;
                    }
                    &:first-child {
                        transform: translateY(-1px) rotate(45deg);
                    }

                    &:last-child {
                        transform: translateY(-3px) rotate(-45deg);
                    }
                }
            }
        }
        .nav-fix {
            display: none;
            position: fixed;
            top: 63px;
            left: 0;
            right: 0;
            padding: 0;
            margin: 0;
            bottom: 0;
            background: #fff;
            z-index: 2;

            color: #484951;

            li {
                border-bottom: solid 1px #dcdfe6;
                position: relative;
                a {
                    display: inline-block;

                    width: 100%;
                    box-sizing: border-box;
                }
                &:after {
                    content: ">";
                    display: inline-block;
                    position: absolute;
                    top: 0px;
                    right: 20px;
                }
            }

            &.is-open {
                display: block;
            }
        }
        @media (max-width: 1150px) {
            h1 {
                flex: 1;
            }
            ul {
                display: none;
            }
            .mini-nav-btn {
                display: block;
            }
        }
    }
}
</style>