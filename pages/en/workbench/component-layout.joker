<template>
<div ref='container' class='joker-demo-container'>
<h2>Component Layout</h2>
<p>This chapter focuses on the layout features of components, covering how to orchestrate component layouts, common shortcuts used during orchestration, and advanced usage such as declaring and employing <strong>component Sections</strong> and component events.</p>
<h3>Adding Components</h3>
<p>The platform supports drag-and-drop to add components through the following channels:</p>
<ul>
<li>
<p><strong>Component Center</strong>: Inside the <strong>Component Center</strong>, drag-and-drop a component to reference it.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component4.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
</li>
<li>
<p><strong>Explorer</strong>: In the resource management interface, drag a file of type <strong>Component</strong> into the project to reference the in-project component file.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component7.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
</li>
<li>
<p><strong>Quick Add from Layout</strong>: Select a component on the canvas and click <strong>Quick Add</strong> on it to open the <strong>Quick Add Component</strong> panel, where you can quickly reference other components.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component8.mp4" type="video/mp4">你的浏览器不支持视频播放。</video><br>
Within the Quick Add Component panel, users can bind <strong>associated components</strong> via <a href="/workbench/section" target="_blank">Section</a>. Associated components appear at the top of the panel for fast selection.<br>
<img src="/workbench/component-layout.png" alt=""></p>
</li>
<li>
<p><strong>Outline Tree</strong>: In the Outline Tree, select a component and click the <strong>plus</strong> icon to its right to open the <strong>Quick Add Component</strong> panel. <strong>Note</strong>: The <strong>plus</strong> icon is only shown if the selected component has <strong>custom Section configuration</strong> enabled; otherwise, child components cannot be added.<br>
<img src="/workbench/component-layout12.png" alt=""></p>
</li>
</ul>
<h3>Selecting Components</h3>
<p>On the canvas, click directly to select a component. While the mouse hovers, the platform draws a <strong>dashed rectangle</strong> around the component and displays its name; click the <strong>left mouse button</strong> to confirm selection.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component-layout2.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
<p>During development, some components—such as modals or hidden buttons—cannot be rendered on the canvas and are therefore hard to select. In such cases, open the <strong>Component Data – Outline Tree</strong> panel and click on the corresponding node to select them.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component-layout3.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
<p>To deselect a component, click the <strong>Deselect</strong> button at the bottom-right corner of the canvas; the Properties panel will revert to file-level settings.<br>
<img src="/workbench/component-layout8.png" alt=""></p>
<h3>Deleting Components</h3>
<p>After selecting a component, click the <strong>Delete</strong> button in the floating quick-action toolbar to remove it.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component-layout4.mp4" type="video/mp4">你的浏览器不支持视频播放。</video><br>
Alternatively, delete components rapidly via the Outline Tree.<br>
<img src="/workbench/component-layout5.png" alt=""></p>
<h3>Duplicating Components</h3>
<p>The platform supports instant duplication of the selected component. After selection, click the <strong>Duplicate</strong> button in the quick-action toolbar; a new copy is placed immediately after the original.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component-layout6.mp4" type="video/mp4">你的浏览器不支持视频播放。</video><br>
Duplication can also be performed quickly from the Outline Tree.<br>
<img src="/workbench/component-layout7.png" alt=""></p>
<p>Additionally, an advanced copy/paste mechanism is available:<br>
Use <code>Ctrl/Cmd+C</code> to copy the selected node. Next, select any container (inside the current or another component) and paste with <code>Ctrl/Cmd+V</code>.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component-layout9.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
<h3>Moving Components</h3>
<p>To reorder the layout, select a component and drag it while holding the left mouse button. The platform displays the drop position live; release the button to commit the change.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component-layout10.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
<p>In complex page hierarchies, dragging on the canvas may be imprecise. Instead, drag the corresponding node in the Outline Tree to rearrange components.<br>
<video width="80%" controls autoplay muted loop><source src="/workbench/component-layout11.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
<h3>Component Reference</h3>
<p>When a non-command-type component is selected, its Properties panel exposes the <strong>Component Reference</strong> (<code>ref</code>). It is recommended that this value be unique within the current file.</p>
<p>Once defined, the reference provides direct access to the component, enabling method calls or value retrieval.<br>
<img src="/workbench/component-layout13.png" alt=""></p>
<p>With the reference configured, you can invoke internal methods of the component from logic code (lifecycle functions, component methods, events, etc.) in the current scope.<br>
<img src="/workbench/component5.png" alt="Public method invocation demo screenshot"></p>
<blockquote>
<p><strong>Command-type components</strong> include Condition nodes, Loop nodes, Render Sections, and Page Containers.</p>
</blockquote>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>