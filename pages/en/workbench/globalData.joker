<template>
<div ref='container' class='joker-demo-container'>
<h2>Global Variables</h2>
<p>Global variables allow developers to create unified variables that can be shared and used across multiple files within a project.</p>
<h3>Overview</h3>
<p>Global variables help solve the problem of variable sharing across different files. They can be accessed and modified in any file. Moreover, if your project is a component/method set, data isolation is effectively maintained in the referencing environment when the project is imported.</p>
<p>Global variables can be managed via the <strong>Global Variables</strong> panel in the <code>Project Configuration</code> file.</p>
<p><img src="/workbench/globalData.png" alt=""></p>
<h3>How to Create Variables</h3>
<p>You can click the <code>Create Global Variable</code> button on the page to create a variable.</p>
<p><img src="/workbench/globalData1.png" alt=""></p>
<blockquote>
<p>For a detailed tutorial on property creation, refer to <a href="/workbench/property" target="_blank">Field Maintenance</a>.</p>
</blockquote>
<h3>How to Use</h3>
<p>Global variables can be used in any expression.</p>
<p><img src="/workbench/globalData2.png" alt=""></p>
<p>Additionally, global variables can also be utilized within logic methods.</p>
<p><img src="/workbench/globalData3.png" alt=""></p>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>