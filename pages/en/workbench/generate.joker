<template>
<div ref='container' class='joker-demo-container'>
<h2>Code Generation</h2>
<p>This chapter explains how to perform code generation and export it locally.</p>
<h3>Overview</h3>
<p>The JOKER Intelligent Development Platform utilizes an advanced <strong>DSL (Domain-Specific Language)</strong> to manage resources within the current project, which empowers JOKER with robust code generation capabilities. Leveraging JOKER’s distinctive <strong>expressions</strong> and sophisticated <strong>type declarations</strong>, it enables high-quality code generation.</p>
<p>The platform provides code generation and export capabilities for two scenarios:</p>
<ul>
<li><strong>Production Release Code Export</strong>: The platform supports generating and exporting code for published project versions, facilitating automated <strong>CI/CD functionality</strong> through version releases.</li>
<li><strong>Development Version Code Export</strong>: The platform allows generating and exporting project code during development, helping developers understand the actual runtime logic in real time and offering a more flexible operational workflow.</li>
</ul>
<h3>Production Release Code Export</h3>
<p>First, ensure that the current project has completed a version release. For the version release process, refer to: <a href="/portal/rep-version" target="_blank">Portal - Creating a Version</a> and <a href="/workbench/check-code-version" target="_blank">Workbench - Code Inspection and Release</a>.</p>
<p>After releasing a version, you can view the published version on the <strong>Project Releases</strong> page and click <strong>Export Code</strong> to initiate the code generation process.</p>
<p><img src="/workbench/generate.png" alt=""></p>
<h3>Development Version Code Export</h3>
<p>The platform permits generating and exporting code for development versions. You can perform code generation by clicking the <code>Generate Code</code> menu in the Workbench.</p>
<p><img src="/workbench/generate1.png" alt=""></p>
<p>When generating development code, the platform follows the preparation steps below:</p>
<ol>
<li>Check for unsaved code.</li>
<li>Perform a full code scan—if any code anomalies are detected, the generation process is aborted.</li>
<li>Trigger the code generation logic.</li>
</ol>
<blockquote>
<p>The generated exported code is provided as a ZIP file. After downloading and extracting it, read the <code>readme.md</code> file first, which includes instructions on project initialization, directory structure, and other relevant details.</p>
</blockquote>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>