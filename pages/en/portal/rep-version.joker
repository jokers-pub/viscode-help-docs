<template>
<div ref='container' class='joker-demo-container'>
<h2>Creating Releases</h2>
<p>In the process of software development and project management, effective version control of repositories is crucial for ensuring smooth project progression, code quality, and traceability. This chapter provides an in-depth and detailed introduction to the specific methods for creating repository releases, the comprehensive workflow for publishing new versions, and the key aspects of maintaining and managing different versions.</p>
<h3>Overview</h3>
<p>During the continuous iteration of repository code, version management plays a pivotal role in code maintenance. At specific development milestones, we can create repository versions. Once a version is created, the system automatically backs up the code for that version, providing users with the ability to clone fixed versions and generate code snippets. Additionally, this process triggers the CI/CD pipeline, ensuring seamless integration across development, testing, and deployment phases for efficient and coherent project execution.</p>
<p><img src="/portal/flow.png" alt="Version Management Workflow"></p>
<p>After a project successfully completes an iteration cycle, a new repository version can be generated by creating a release. Note that the <strong>Create Release</strong> button is only visible to the <strong>repository administrators</strong>.</p>
<p><img src="/portal/rep-version.png" alt="Create Release Button"></p>
<p>Clicking this button begins the formal release process:</p>
<h3>Code Review</h3>
<p>The first step is <strong>Code Review</strong>. Once this step is initiated, all members except <strong>administrators</strong> will be prohibited from submitting new code. During this phase, administrators must thoroughly review the code in the workspace and address any identified issues. The process can only proceed to the next step once all errors detected by the platform have been fully resolved.</p>
<p><img src="/portal/rep-version2.png" alt="Code Review Page"></p>
<p>Upon entering the workspace, the platform automatically triggers a code review scan. It performs a comprehensive examination of all resource files to verify code types and syntax accuracy.</p>
<p><img src="/portal/rep-version3.png" alt="Code Scan Details"></p>
<p>After all detected errors and issues are resolved, a <strong>Complete Code Review</strong> button will appear. Clicking this button allows progression to the next stage of the release process.</p>
<p><img src="/portal/rep-version4.png" alt="Complete Code Review Button"></p>
<p><strong>Important Note</strong>: During code validation, the platform only provides suggestions based on code standards and cannot guarantee the correctness of business logic. Therefore, always verify and confirm the relevant code logic before proceeding.</p>
<h2>Selecting Related Issues</h2>
<p>After completing the code review, the platform automatically returns to the repository homepage, where the <strong>Code Review</strong> button is replaced by a <strong>Request Release</strong> button. Clicking this button initiates the next step: <strong>Selecting Issues</strong>.</p>
<p><img src="/portal/rep-version5.png" alt="Request Release Button"></p>
<p>At this stage, the platform automatically filters all issues in the <strong>Pending Release</strong> state. We can associate the issues resolved in the current version here. Once the version is released, the associated issues will automatically transition to the <strong>Completed</strong> state, and all linked issues will associate with the current version number. This makes it significantly easier to track which issues were resolved in a given release.</p>
<h3>Changelog</h3>
<p>In this section, we can maintain the changelog. The platform provides an automated log import feature for convenience.</p>
<p><img src="/portal/rep-version6.png" alt="Changelog Page"></p>
<ul>
<li><strong>Create</strong>: We can manually customize the changelog according to actual updates, documenting key changes in the current version.</li>
<li><strong>Import Changelog</strong>: The platform automatically imports all commit logs from the previous version to the current date, helping to quickly summarize version changes.</li>
</ul>
<p><img src="/portal/rep-version7.png" alt="Changelog Import Details"></p>
<h3>Version Confirmation</h3>
<p>After completing the steps above, we can confirm the release version number and related information.</p>
<p><img src="/portal/rep-version8.png" alt="Version Confirmation Page"></p>
<ul>
<li><strong>Major Version</strong>: Represents significant updates and major feature changes (e.g., upgrading from 1.0 to 2.0), often indicating architectural overhauls or new core functionalities.</li>
<li><strong>Minor Version</strong>: Indicates incremental improvements and additional features on top of the major version (e.g., 1.1 introduces auxiliary functionalities or optimizations over 1.0).</li>
<li><strong>Patch Version</strong>: Primarily addresses bug fixes and minor optimizations (e.g., 1.0.1 resolves minor issues in 1.0).</li>
</ul>
<p>After confirming the <strong>version number</strong>, clicking <strong>Submit</strong> completes the version creation.</p>
<h3>Making a Release Public</h3>
<p>To make a version publicly available for all platform developers, click the <strong>Publish Release</strong> button attached to the version.</p>
<p><img src="/portal/rep-version9.png" alt="Publish Release &amp; Cover Upload"></p>
<p>Publicly released versions are displayed in the platformâ€™s <a href="https://viscode.jokers.pub/market" target="_blank">Marketplace</a>. If a version receives official certification, an official badge can be added to gain more recognition from developers.</p>
<p>Additionally, custom repository covers can be uploaded on the release page to improve preview visibility and attract more developer interest.</p>
<p><img src="/portal/market.png" alt="Marketplace"></p>
<blockquote>
<p><strong>Special Note</strong>: Regardless of whether a project is private, its releases can be made public. However, once published, releases are referenceable by others and cannot be retracted. Exercise caution when choosing to make a release public.</p>
</blockquote>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>