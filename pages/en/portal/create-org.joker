<template>
<div ref='container' class='joker-demo-container'>
<h2>Creating Teams/Organizations</h2>
<p>This chapter explains how to create a team or organization.</p>
<h3>How to Create a Team</h3>
<p>After <strong>logging in</strong>, click the plus button in the <code>My Organizations</code> panel on the homepage to create a team/organization.</p>
<p><img src="/portal/create-org.png" alt=""></p>
<h3>Filling in Team Information</h3>
<p>In the pop-up window for creating an organization/team, you'll need to enter the organization's name, nickname, and a brief description. Then click the &quot;Confirm&quot; button to complete the creation.</p>
<ul>
<li><strong>Organization Name</strong>: Must be entered in English letters. This name will serve as the unique identifier for the team, ensuring precise distinction and uniqueness across the platform.</li>
<li><strong>Organization Nickname</strong>: Allows you to assign an alias to the team. It is recommended to use concise and intuitive phrasing for easy recognition and memorization by team members and stakeholders.</li>
</ul>
<blockquote>
<p>Important Note: The organization name must be unique across the entire platform, as it serves as the sole identifier for your organization/team.</p>
</blockquote>
<p><img src="/portal/create-org2.png" alt=""></p>
<h3>Completing Team/Organization Registration</h3>
<p>After clicking &quot;Submit&quot; to finalize the creation of your <code>organization/team</code>, the platform will automatically generate a team homepage where you can view and manage all team-related content, including the team's nickname, README, avatar, repositories, team members, and more.</p>
<p><img src="/portal/create-org3.png" alt=""></p>
<p>For detailed instructions on team management, refer to: <a href="/portal/org-member" target="_blank">Team Management</a>.</p>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>