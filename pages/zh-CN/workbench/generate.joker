<template>
<div ref='container' class='joker-demo-container'>
<h2>代码生成</h2>
<p>本章主要讲解如何进行代码生成并导出到本地。</p>
<h3>概述</h3>
<p>JOKER 智能开发平台采用高级的 <strong>DSL 语言</strong>来维护当前项目中的资源内容，这赋予了 JOKER 代码生成能力。借助 JOKER 独特的<strong>表达式</strong>和高级<strong>类型声明</strong>，能够实现高质量的代码生成。</p>
<p>平台提供两种场景下的代码生成导出能力：</p>
<ul>
<li><strong>发行版本代码导出</strong>：平台支持将已发行的项目版本进行代码生成与导出，有助于通过版本发布实现自动 <strong>CICD 功能</strong>。</li>
<li><strong>开发版本代码导出</strong>：平台允许将开发过程中的项目代码进行生成和导出，便于开发人员在开发过程中实时了解项目实际运行原理，还能提供更灵活的操作场景。</li>
</ul>
<h3>发行版本代码导出</h3>
<p>首先要确保当前项目已完成一个版本的发布，版本发布流程可参阅：<a href="/portal/rep-version" target="_blank">门户 - 创建版本</a>以及<a href="/workbench/check-code-version" target="_blank">工作台 - 代码检查及发布</a>的内容来完成版本发布。</p>
<p>当完成一个版本的发布后，可在<strong>项目发行版</strong>页面查看发布版本，并点击<strong>导出代码</strong>来实现代码生成工作。</p>
<p><img src="/workbench/generate.png" alt=""></p>
<h3>开发版本代码导出</h3>
<p>平台允许对开发版本的代码进行生成导出，可在工作台中点击<code>生成代码</code>菜单来开展代码生成工作。</p>
<p><img src="/workbench/generate1.png" alt=""></p>
<p>在进行开发代码生成时，平台会按以下流程完成准备工作：</p>
<ol>
<li>检测是否有未保存的代码。</li>
<li>对全量代码进行代码扫描，若有代码异常则中断代码生成操作。</li>
<li>触发代码生成逻辑。</li>
</ol>
<blockquote>
<p>生成导出的代码会以 ZIP 包的方式提供下载，下载解压后，请先阅读<code>readme.md</code>文件，里面包含了如何启动项目、项目目录介绍等内容。</p>
</blockquote>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>