<template>
<div ref='container' class='joker-demo-container'>
<h2>组件/方法集发布</h2>
<p>本章聚焦于如何开展组件库/方法集类型仓库的版本发布工作，以及怎样选择公开能力。</p>
<h3>概述</h3>
<p>在阅读本章内容前，建议先阅读以下两个章节：</p>
<ul>
<li><a href="/portal/rep-version" target="_blank">版本发布</a></li>
<li><a href="/workbench/check-code-version" target="_blank">代码检查及版本发布</a></li>
</ul>
<p>UI 组件和方法集类型的仓库属于可被引用的扩展插件，其版本发布需要执行一些对外公开声明的操作。借助此功能，我们能够标记出哪些组件、方法集、样式以及样式变量可供外部调用者使用，哪些仅作为内部资源在内部使用。</p>
<p>这里我们将按照功能来讲解各个功能的对外输出是如何标注的。</p>
<h3>开放组件</h3>
<p>在前端组件库项目里，若要将部分已开发完成的组件对外提供，方便使用者快速引用，就需在<code>项目配置</code>文件中进行相关选择，并对开放组件开展特色化配置。</p>
<p><img src="/workbench/package-release.png" alt=""></p>
<p>平台会展示所有组件，我们只需从中挑选要对外公开的组件，并在最左侧勾选。勾选之后，在选中组件的右侧，会出现三个个性化的配置操作区域：</p>
<ol>
<li><strong>配置组件简介</strong>：在此处可详细说明组件，当开发人员引用该组件时，鼠标悬停便会弹出提示框，助力其深入了解组件特性。</li>
<li><strong>仅在快速添加展现</strong>：开发人员可以通过该属性来配置组件是否是内部使用组件，内部使用组件：对外公开，但不支持独立使用，仅允许在固定组件的子集中存在，例如下拉框组件和下拉选项组件，其中下拉选项组件可以配置为“仅在快速添加中展示”，这样配置后该组件将不会在组件中心中展示，而只能在下拉框组件中通过快速添加“关联组件”进行添加</li>
<li><strong>组件图标 ICON</strong>：平台支持对组件的 ICON 图标进行配置，且图标格式支持 SVG。我们能在<a href="https://www.iconfont.cn/" target="_blank">iconfont</a>上复制 SVG 代码，再粘贴到组件图标编辑窗口，轻松完成对组件 ICON 的编辑。
<video width="80%" controls autoplay muted loop><source src="/workbench/package-release2.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></li>
<li><strong>配置组件封面</strong>：可以为组件配置封面，配置后，该组件在组件中心将以大图形式展示，更便于开发人员挑选。
<img src="/workbench/package-release3.png" alt=""></li>
</ol>
<p>一个组件的个性化数据来源映射关系：</p>
<table class="mkd-table">
<thead>
<tr>
<th>个性化数据</th>
<th>来源</th>
</tr>
</thead>
<tbody>
<tr>
<td>组件名称</td>
<td>文件名称</td>
</tr>
<tr>
<td>组件标题</td>
<td>文件标题</td>
</tr>
<tr>
<td>组件 ICON</td>
<td><code>项目配置</code>文件中配置的 ICON</td>
</tr>
<tr>
<td>组件简介</td>
<td><code>项目配置</code>文件中配置的组件简介</td>
</tr>
<tr>
<td>组件封面</td>
<td><code>项目配置</code>文件中配置的组件封面</td>
</tr>
<tr>
<td>组件分组</td>
<td>通过对项目中实际文件的目录结构自动分析而来</td>
</tr>
</tbody>
</table>
<h3>开放方法集</h3>
<p>无论是前端项目还是服务端类型的项目，在方法集类型的仓库（包括前端组件库类型项目），我们可以在<code>项目配置</code>文件中选择要对外公开的方法集。</p>
<p><img src="/workbench/package-release4.png" alt=""></p>
<p>我们可以在这里选择要公开的方法集文件，并且在勾选后我们可以在右侧配置个性化信息：</p>
<ol>
<li>方法集默认 ICON：平台支持对组件的 ICON 图标进行配置，且图标格式支持 SVG。我们能在<a href="https://www.iconfont.cn/" target="_blank">iconfont</a>上复制 SVG 代码，再粘贴到图标编辑窗口，轻松完成对组件 ICON 的编辑。复制教程可参考开放组件中的 ICON 复制视频教程。</li>
<li>方法集默认背景色：允许我们为方法集配置默认的逻辑背景色。 不建议配置为浅色。</li>
<li>方法集默认字体颜色：允许我们为方法集配置默认的逻辑字体颜色。默认为白色。</li>
</ol>
<p>这些个性化的元素会影响我们在逻辑编排中的现实效果。
<img src="/workbench/package-release5.png" alt=""></p>
<h5>选择开放方法</h5>
<p>刚才我们选择了对外开放的方法集，这只代表我们对外公开哪个方法集文件，但不代表方法集内的方法都会对外开放。</p>
<p><img src="/workbench/package-release6.png" alt=""></p>
<p>我们可以在方法集中修改方法的<code>是否公开</code>属性来决定当前方法是对外公开还是内部使用的方法。</p>
<p>当我们选择公开后，我们可以在这里配置差异的特色化配置，包括方法集背景色、字体颜色。</p>
<p>若这里配置了背景色和字体色，则按照方法配置的个性数据执行，否则按照<code>项目配置</code>文件中的默认个性化数据执行。</p>
<h3>开放样式名</h3>
<p>在组件库项目里，若已提供默认样式代码，且搭配了常用的样式名用于快速配置数据，此时需在 <code>项目配置</code> 文件中创建样式名数据，并选择对外公开。</p>
<p><img src="/workbench/package-release7.png" alt=""></p>
<p>在此处，我们能够勾选想要公开的样式名。一旦公开，这些样式名将为外部提供快捷样式数据。</p>
<blockquote>
<p>样式使用方法可参考 <a href="/workbench/style" target="_blank">组件样式</a>。</p>
</blockquote>
<h3>开放样式变量</h3>
<p>当组件库项目中已具备默认样式代码，同时提供了常用的样式变量快速配置数据时，就需要在 <code>项目配置</code> 文件中创建样式变量值，并选择对外公开。</p>
<p><img src="/workbench/package-release8.png" alt=""></p>
<p>在此，我们可以勾选要公开的样式变量。公开后的样式变量会对外提供快捷选择的数据。</p>
<blockquote>
<p>样式使用方法可参考 <a href="/workbench/style" target="_blank">组件样式</a>。</p>
</blockquote>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>