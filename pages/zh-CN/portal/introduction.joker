<template>
<div ref='container' class='joker-demo-container'>
<h2>Joker 智能开发平台</h2>
<h3>产品概述</h3>
<p>Joker 智能可视化开发平台是一款基于云端的可视化开发工具，旨在为开发人员提供高效、灵活的开发环境，支持前端项目、后端服务以及 AI 智能体的可视化开发，贯穿整个开发流程。它采用低代码开发模式，通过直观的可视化界面，降低开发门槛，减少代码编写量，提升开发效率。</p>
<h3>产品优势</h3>
<h4>统一开发模式，降低学习成本</h4>
<p>传统线下代码开发模式面临诸多问题，如开发人员技术能力差异、本地环境不一致、开发框架多样等，导致学习成本和开发成本居高不下。Joker 平台构建统一开发模式，将各类开发资源迁移至线上，借助可视化操作界面，摒弃复杂代码编写与环境配置工作。开发人员无需深入学习晦涩代码语法和复杂框架，就能快速上手，利用所见即所得的特性，实时获取反馈，精准把握项目细节，提升开发效率与质量。</p>
<h4>高度灵活的可视化云端 IDE</h4>
<p>市面上多数低代码产品存在局限性，如入门门槛高、组件灵活性差、可视化编辑器功能不足、开发限制多、组件生态不完善等。Joker 平台以技术人员需求为出发点，打造功能强大的云端可视化编辑器（IDE）。它操作逻辑简单，组件自定义程度高，能满足复杂开发场景需求，如节点循环、插槽传参数等。同时，平台开发的资产可灵活部署，生成的源代码便于开发人员自由支配，减少对平台的依赖。丰富的组件市场提供多样优质组件资源，促进项目快速搭建与业务创新。</p>
<p><video width="80%" controls autoplay muted loop><source src="https://static.jokers.pub/home/video/component.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
<h4>良性可视化生态社区</h4>
<p>平台借鉴 Github 开源社区理念，以仓库形式管理项目版本。开发人员可在社区发布项目、收集议题、引用克隆他人仓库。通过这种方式，形成可视化资产的开源生态循环，丰富组件资源，推动项目持续发展，助力开发人员高效完成项目开发。</p>
<p><video width="80%" controls autoplay muted loop><source src="https://static.jokers.pub/home/video/ai.mp4" type="video/mp4">你的浏览器不支持视频播放。</video></p>
<h4>强大底层，自主可控</h4>
<p>Joker 平台自主研发底层框架及组件生态系统，涵盖框架底层、组件库、脚手架、路由、VSCODE 插件、请求等各个关键环节。这种底层自研的模式实现了从开发到生产部署全流程工具链的自主可控，确保平台不受外部技术限制，能够稳定、高效地运行。经过多年市场应用的检验，Joker 底层框架在性能、稳定性方面表现卓越，其独特的开发语法简洁高效，有效提升了开发人员的工作效率，为平台的持续优化和发展提供了坚实的基础。
<img src="/portal/lib.png" alt="core lib"></p>
<h4>拥抱 AI 时代</h4>
<p>AI 大模型发展迅速，云端可视化 IDE 将成为与 AI 产品结合的理想载体。Joker 平台作为云端可视化工具，深度对接 AI 模型，实现通过对话生成可视化成果，用户可定向修改，为开发人员打造灵活、高效、富有创意的开发体验，引领软件开发智能化发展。
<img src="/portal/ai.jpeg" alt="AI"></p>
<h3>产品定位</h3>
<p>Joker 平台定位为无代码、低代码下层的可视化开发工具，提供高可用、高灵活的云端可视化 IDE。通过组件可视化配置和模型代码生成，支持无代码、低代码开发模式，满足不同开发人员的需求，降低开发难度，提高开发效率。</p>
<p><img src="/portal/position.jpeg" alt="产品定位"></p>
<h3>核心价值</h3>
<h4>智能可视化开发工具</h4>
<ol>
<li><strong>可视化开发</strong>：支持在线可视化开发组件、方法集和项目，实现在线发布与引用，方便快捷。</li>
<li><strong>面向开发的可视化工具</strong>：集成本地代码开发关键特性，如生命周期、组件引用等，提升编辑开发效率与便捷性。</li>
<li><strong>基于表达式模式的逻辑开发</strong>：配备智能提示功能，利用动态类型声明，助力开发人员快速获取操作对象提示，降低开发难度，减少出错概率。</li>
<li><strong>代码检查</strong>：提供完整代码检查能力，实时反馈代码问题，如参数丢失、类型错误等，并定位问题、提供修改建议。</li>
<li><strong>前后端分离</strong>：用户可自主选择在平台内开发前端或后端项目，两者不强制绑定。前端项目可通过 API 访问现有后端项目，后端项目可自主管理数据模型。</li>
<li><strong>三方组件引用</strong>：支持 NPM 在线引用和引用其他开发人员的组件库，加速项目开发，实现快速依赖。</li>
<li><strong>版本管理</strong>：具备完整版本管理机制，版本更新发布即时通知引用仓库，实现依赖快速升级。</li>
</ol>
<p><img src="/portal/main.png" alt=""></p>
<h4>开发人员社区</h4>
<p>平台内置团队管理与仓库管理系统，管理员可精细设置仓库权限，涵盖成员管理、权限分配等操作，提升项目管理效率。市场功能提供智能搜索和筛选，方便开发人员获取优质组件和项目资源，实现技术资源高效复用。</p>
<h4>AI 智能助手</h4>
<p>平台提供 AI 智能助手功能，通过对话生成页面布局，一键应用到可视化编辑器，实现无缝对接，提高开发效率。</p>
<h4>灵活多样的资产导出</h4>
<p>平台提供 CICD 功能，实现仓库开发后的自动化服务部署，也支持 WebHook 触发私有化 CICD 流程。开发资产可生成符合行业标准的源代码，方便导出后自主选择部署方式或进行本地二次开发。</p>

<BottomNav />
</div>
</template>
<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../../common/components/bottom-nav.joker";
export default class extends Component {
components={
BottomNav
}
mounted(){
let container= this.$getRef('container')?.output!;
container.querySelectorAll('pre code').forEach((el:HTMLElement) => {
        hljs.highlightElement(el);
      });
}
}
</script>